---
title: "assignment_6"
format: gfm
editor: visual
---

```{r}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

```{r}
library(tidyverse)
library(knitr)
library(dplyr)
```

## Exercise 1. Tibble and Data Import

#### 1.1 Create the following tibble manually, first using `tribble()` and then using `tibble()`. Print both results. (We didn’t have time to cover this in class, but look up how these functions work [here](https://r4ds.had.co.nz/tibbles.html#creating-tibbles))

```{r}
tribble(
  ~a, ~b, ~c,
  #--|--|----
  1, 2.1, "apple",
  2, 3.2, "orange"
)
```

```{r}
tibble(
  a = 1:2,
  b = c(2.1, 3.2),
  c = c("apple", "orange")
) 
```

#### 1.2 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset2.txt`into R. Change the column names into “Name”, “Weight”, “Price”.

```{r}
fruit <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset2.txt")
```

```{r}
fruit |> 
  rename(
    Name = "apple",
    Weight = "1",
    Price = "2.9"
  )

tribble(
    ~Name, ~Weight, ~Price,
  #--|--|----
  "apple", 1, 2.9,
  "orange", 2, 4.9,
  "durian", 10, 19.9
)
  
```

#### 1.3 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset3.txt`into R. Watch out for the first few lines, missing values, separators, quotation marks, and deliminaters.

```{r}
fruits2 <- read_delim("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset3.txt",skip=2, delim=";", quote ="/", na = c("?", "Not Available", "NA"))

tibble(fruits2)
```

#### 1.4 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset4.txt`into R. Watch out for comments, units, and decimal marks (which are `,` in this case).

```{r}
fruits3 <- read_delim("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset4.txt") |>  
  mutate(
    Weight = as.numeric(str_remove_all(Weight, "kg")),
    )
```

#### 1.5 Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset5.txt`into R. Parse the columns properly. As a reminder, you can read about parsing date and time data [here](https://r4ds.had.co.nz/data-import.html#readr-datetimes). Write this imported and parsed data frame into a new csv file named `dataset5_new.csv` in your `problem_sets` folder.

```{r}
fruits4 <- read_delim("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/dataset5.txt") |> 
  mutate('Expiration Date' = parse_date("September 26, 2018", "%y/%m/%d"))
```

## Exercise 2. Weather station

#### 2.1 Variable descriptions

-   The text file `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station_notes.txt` contains descriptions of different variables collected by the station.

-   Import it into R and print it in a table as shown below with `kable()`.

```{r}
weather_station_notes <-
  read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station_notes.txt") |> 
  separate('Item-Unit-Description', into = c("Item", "Unit", "Description"), sep = "-")

kable(weather_station_notes)
```

#### 2.2 Data tidying

-   Import `https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station.csv` into R. As you can see, this dataset is a classic example of untidy data: values of a variable (i.e. hour of the day) are stored as column names; variable names are stored in the `item` column.

-   Clean this dataset up and restructure it into a tidy format.

-   Parse the `date` variable into date format and parse `hour` into time.

-   Turn all invalid values into `NA` and turn `NR` in rainfall into `0`.

-   Parse all values into numbers.

-   Show the first 6 rows and 10 columns of this cleaned dataset, as shown below, *without* using `kable()`.

```{r}
raw_weather <- read_csv("https://raw.githubusercontent.com/nt246/NTRES-6100-data-science/master/datasets/2015y_Weather_Station.csv", col_types = cols(.default = "c"))

raw_weather |> 


raw_weather |> 
  pivot_longer("00":"23", names_to = "hour") |> 
  pivot_wider(names_from = item, values_from = hour) |> 
  mutate(across(c(AMB_TEMP:WS_HR)), as.integer)


```
